<template>
  <div id="precommit">
    <v-dialog scrollable v-model="dialog" width="400px">
      <template v-slot:activator="{ on, attrs }">
        <v-btn
          fab
          small
          v-bind="attrs"
          v-on="on"
          icon
        >
          <v-icon>mdi-upload</v-icon>
        </v-btn>
      </template>
      <v-card>
        <!-- <v-toolbar dense elevation="3">
          <v-spacer></v-spacer>
          <div class="grey--text">{{message}}</div>
        </v-toolbar> -->
        <div>
          <div class="mx-2 mt-2" align="center">
            <v-date-picker
              width="100%"
              locale="vi-VN"
              color="primary"
              header-color="primary"
              v-model="dates"
              :show-current="false"
              @change="fixedDates(dates)"
              range
            ></v-date-picker>
          </div>
          <div class="mx-3 mb-1">
            Mẫu sẽ hiện hành từ
            <b>{{ moment(dates[0]).format("DD/MM/YYYY") }}</b> đến
            <b>{{ moment(dates[1]).format("DD/MM/YYYY") }}</b>
          </div>
        </div>
        <div>
          <v-text-field
            label="templateID"
            v-model="data.templateID"
            @change="requestTemplateID"
            @input="requestTemplateID"
            dense
            solo
          ></v-text-field>
        </div>
        <!-- :color="
              data.templateID == ''
                ? 'error'
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? 'error'
                  : 'success'
                : 'warning'
            "
            :suffix="
              data.templateID == ''
                ? 'Không được để trống'
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? 'Không chứa khoảng trắng'
                  : 'ID hợp lệ'
                : 'Cập nhật Template'
            " -->
        <div
          :class="`py-2 text-caption px-3 white--text ${
            data.templateID == ''
                ? 'error'
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? 'error'
                  : 'success'
                : 'warning'
          }`"
        >
          {{ data.templateID == ''
                ? 'Không được để trống'
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? 'Không chứa khoảng trắng'
                  : 'ID hợp lệ'
                : 'Cập nhật Template' }}
        </div>
        <v-toolbar elevation="3" dense>
          <v-spacer></v-spacer>
          <v-btn
            v-if="isCommited"
            color="purple"
            class="mr-3"
            text
            @click="viewForm"
            >Xem</v-btn
          >
          <!--  -->
          <v-btn
            :disabled="canCommit==false || isCommited || isCorrectTemplateID "
            :color="`${
            data.templateID == ''
                ? 'gray darken-1'
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? 'gray darken-1'
                  : 'success'
                : 'warning'}`"
            class="mr-3"
            v-text="`${
            data.templateID == ''
                ? ''
                : isCorrectTemplateID
                ? data.templateID.indexOf(' ') >= 0
                  ? ''
                  : 'TẠO'
                : 'CẬP NHẬT'}`"
            text
            @click="requestTemplates"
            ></v-btn
          >
          <v-btn
            color="red"
            class="mr-3"
            text
            @click="
              dialog = false;
              isCommited = false;
            "
          >
            đóng
          </v-btn>
        </v-toolbar>
      </v-card>
    </v-dialog>
  </div>
</template>

<script>
import axios from "axios";
import moment from "moment";

const token =
  "eyJ1aWQiOiIxMTgwMDAxNDgiLCJzaWQiOiIwQzk0NEREOTA0ODc1NDVEIiwiZXhwIjoyMDgyMDg0NDIwfQ.CS9Q0kUF985zbgu790h3GnYgXmzQf1-ZKUxsqebpRkI";
const instance = axios.create({
  baseURL: "https://tapi.lhu.edu.vn/qa",
});
instance.defaults.headers.common["Authorization"] = token;

export default {
  name: "precommit",
  props: {
    data: Object,
    nameTemplates: String,
    snackbar: Object,
  },
  data: function () {
    return {
      dates: [
        moment().format("YYYY-MM-DD"),
        moment().add(10, "days").format("YYYY-MM-DD"),
      ],
      datesCommit: [],
      message: "Có thể tải lên",
      dialog: false,
      canCommit: false,
      isCommited: false,
      isCorrectTemplateID: false,
      moment,
    };
  },
  methods: {
    fixedDates: function (dates) {
      return dates.sort(
        (a, b) =>
          new moment(a).format("YYYYMMDD") - new moment(b).format("YYYYMMDD")
      );
    },
    viewForm: function () {
      window.open(
        "https://qa.lhu.edu.vn/" + this.data.templateID + "/1",
        "_blank"
      );
    },
    requestTemplateID() {
      instance
        .post("/Web_KiemTraTemplateID", {
          TemplateID: this.data.templateID,
        })
        .then((response) => { 
          if (response.data.data[0].error) {
            this.isCorrectTemplateID = false;
            // console.log(response.data.data[0].message)
          } else {
            if (this.data.templateID == "") {
              this.isCorrectTemplateID = false;
              this.message = "templateID rỗng !";
              this.canCommit = false;
              this.isCommited = false;
              return;
            }
            this.isCorrectTemplateID = true;
            this.canCommit = true;
            this.message = response.data.data[0].message;
          }
        });
    },
    requestTemplates() {
      instance
        .post("/Web_KiemTraTemplateID", {
          TemplateID: this.data.templateID,
        })
        .then((response) => {
          if (response.data.data[0].error) {
            this.canCommit = false;
            this.isCommited = false;
            this.message = response.data.data[0].message;
            // this.message = "Cập nhật template"
            this.isCorrectTemplateID = false
            instance
              .post("/Web_TemplateUpdate", {
                TemplateID: this.data.templateID,
                TenKhaoSat: this.nameTemplates,
                jsonDataNew: JSON.stringify(this.data),
                NgayBD: moment(this.dates[0]).format("MM-DD-YYYY"),
                NgayKT: moment(this.dates[1]).format("MM-DD-YYYY"),
              })
              .then((response) => {
                this.message = response.data.data[0].message;
                this.isCommited = true;
                console.log(response.data);
              })
              .catch((error) => {
                console.log(error);
              });
          } else {
            if (this.data.templateID == "") {
              this.message = "templateID rỗng !";
              this.canCommit = false;
              this.isCommited = false;
              this.isCorrectTemplateID = false;
              return;
            }
            // this.canCommit = true;
            // this.isCorrectTemplateID = true
            instance
              .post("/Web_TemplateUpdate", {
                TemplateID: this.data.templateID,
                TenKhaoSat: this.nameTemplates,
                jsonDataNew: JSON.stringify(this.data),
                NgayBD: moment(this.dates[0]).format("MM-DD-YYYY"),
                NgayKT: moment(this.dates[1]).format("MM-DD-YYYY"),
              })
              .then((response) => {
                this.message = response.data.data[0].message;
                this.isCommited = true;
                console.log(response.data);
              })
              .catch((error) => {
                console.log(error);
              });
            // console.log(response.data.data[0].message)
          }
        });
    },
    // requestTemplates() {
    //   instance
    //     .post("/Web_KiemTraTemplateID", {
    //       TemplateID: this.data.templateID,
    //     })
    //     .then((response) => {
    //       if(response.data.data[0].error){
    //         instance
    //           .post("/Web_TemplateUpdate", {
    //             TemplateID: this.data.templateID,
    //             TenKhaoSat: this.nameTemplates,
    //             jsonDataNew: JSON.stringify(this.data),
    //             NgayBD: moment(this.dates[0]).format("MM-DD-YYYY"),
    //             NgayKT: moment(this.dates[1]).format("MM-DD-YYYY"),
    //           })
    //           .then((response) => {
    //             console.log(response.data)
    //           })
    //       }
    //     })
    // }
  },
  created() {
    if (this.data.templateID === "") {
      this.message = "templateID rỗng !";
      this.canCommit = false;
    }
  },
};
</script>

<style>
pre {
  overflow-x: auto;
  white-space: pre-wrap;
  white-space: -moz-pre-wrap;
  white-space: -pre-wrap;
  white-space: -o-pre-wrap;
  word-wrap: break-word;
}
</style>